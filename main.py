
import urllib2
from bs4 import BeautifulSoup
import pandas as pd
import numpy as np
import sqlite3
import requests
import time
import shodan
import re
import json

#---------------------------------------- FLAGS START ----------------------------------------

malware_domain_list = False
vxvault = True
phishtank = False

#---------------------------------------- FLAGS END ------------------------------------------

SHODAN_API_KEY = "QzPOsPn8PZscQBPZ0QqBj55TxRs4HgIN" ## api key in order to use shodan api
api = shodan.Shodan(SHODAN_API_KEY)

conn = sqlite3.connect('database/threats.db')## connects to db
conn.text_factory = str
c = conn.cursor()##opens cursor for db transactions


#c.execute("DROP TABLE IF EXISTS threats_table")
c.execute("CREATE TABLE IF NOT EXISTS threats_table (ip string, domains string, description string, longitude string, latitude string, country string, os string, city string);") ## create ONE table with many collumns

ip = []
domains = []
description = []


#-------------------------------------------   MALWARE DOMAIN LIST START ---------------------------------------------------------------------------
if malware_domain_list:
    
    for p in range(0,22):
        ##next line creates the url for each html page to be parsed
        url_no = 'https://www.malwaredomainlist.com/mdl2.php?inactive=&sort=Date&search=&colsearch=All&ascordesc=DESC&quantity=100&page={}'.format(p)
        page = urllib2.urlopen(url_no)

        soup = BeautifulSoup(page, features = 'lxml')## opens url page with parser lxml

        x = soup.find_all("table", {"class": "table"})


        data = x[1].find_all('td')
        #print data[15],"fhsfygjsfghjdsghjdghkdghkdghkdghkdghkdghkdghkd" 
        #print data[16]
        #print data[18]

        i = 0
        j = 0
        for item in data:
            if i > 15:
                if j % 7 == 0:
                    #item = re.sub("[^\d\.]", '', str(item))
                    sep = '/'
                    item = str(item).split(sep, 1)[0]
                    ip.append(str(item).replace('<wbr>','').replace('</wbr>','').replace('<td>','').replace('</td>','').replace('<',''))
                j = j + 1
            i = i + 1

    #------------------------------------------
        i = 0
        j = 0
        for item in data:
            if i > 14:
                if j % 7 == 0:
                    domains.append(str(item).replace('<wbr>','').replace('</wbr>','').replace('<td>','').replace('</td>',''))

                j = j + 1
            i = i + 1
    #-------------------------------------------
        i = 0
        j = 0
        for item in data:
            if i > 17:
                if j % 7 == 0:
                    description.append(str(item).replace('<wbr>','').replace('</wbr>','').replace('<td>','').replace('</td>',''))
                j = j + 1
            i = i + 1

    #-------------------------------------------        
    #print "Domain lenght is:",len(domains)   
    #print "ip lenght is:",len(ip)   
    #print "Description lenght is:",len(description)

#-------------------------------------------   MALWARE DOMAIN LIST END -----------------------------------------------------------------------------


#--------------------------------------------- PHISHTANK  START ------------------------------------------------------------------------------------
if phishtank:

                # api phishtank key 8558b8f8635ae840f55ca2c913cc67713e1ddd4e573909c409b6c99b3eb0b4d9 afte data in url   url_no = 'http://data.phishtank.com/data/8558b8f8635ae840f55ca2c913cc67713e1ddd4e573909c409b6c99b3eb0b4d9/online-valid.json'
                # item  == [{u'detail_time': u'2020-04-15T18:25:12+00:00', u'country': u'US', u'rir': u'arin', u'announcing_network': u'26496', u'cidr_block': u'107.180.0.0/17', u'ip_address': u'107.180.40.68'}]
                #url_no = 'http://data.phishtank.com/data/online-valid.json'

    url_no = 'http://data.phishtank.com/data/8558b8f8635ae840f55ca2c913cc67713e1ddd4e573909c409b6c99b3eb0b4d9/online-valid.json'
    pages = urllib2.urlopen(url_no).read()
    pages = json.loads(pages)

    #pages = pages[:100]

    for item in pages:
      #print item['details']
      item_ip =  item['details'][0]['ip_address']
      ip.append(str(item_ip))

      item_domain = item['url']
      domains.append(str(item_domain.encode('utf8')))

      item_description = item['phish_detail_url']
      description.append(str(item_description))


#--------------------------------------------- PHISHTANK  END   ------------------------------------------------------------------------------------


#--------------------------------------------- VXVAULT START    ------------------------------------------------------------------------------------
if vxvault:
    
    #url_no = 'http://vxvault.net/ViriList.php?s=0&m=50000'

    for p in range(0,17128):
        url_no = 'http://vxvault.net/ViriList.php?s={}&m=100' .format(p)
        print url_no
        page = urllib2.urlopen(url_no)

        soup = BeautifulSoup(page, features = 'lxml')## opens url page with parser lxml

        data = soup.find_all('td')
        #print len(data)

        #description = []
        ######### description start #############################

        for i in range(len(data)):
            if i%5 ==0:
                #print data[i+2].text, "\n"
                description.append(data[i+2].text)

        ######### description start #############################

        #for i in range(0,10) : #range(len(data))
            #if i%2 == 0:
        #        print i,"data",data[i]

        #domains = []

        ########## domainss start ################################

        for i in range(len(data)):
            if i%5 == 0: # and i>0
                #print i+1,".",data[i+1].text
                domains.append(data[i+1].text.replace('[D]',''))

        #for i in range(len(domainss)):
        #    print domainss[i]

        ######### domainss end  ##################################


        #ip=[]
        #########    IP start   ############
        for i in range(len(data)):
            if i%5 == 0: # and i>0
                #print i+3,"    ",data[i+3].text
                ip_ = (data[i+3].text).encode('ascii','ignore')
                ip.append(ip_)

        #for i in range(len(ips)):
        #    print ips[i]
        #########    IP end     ############

    #    if len(ip) == len(domains) and len(domains)==len(description):
    #        print "TRUE!"


#--------------------------------------------- VXVAULT END      ------------------------------------------------------------------------------------




#--------------------------------------------- SHODAN & DATABASE START -----------------------------------------------------------------------------
c.execute("SELECT * FROM threats_table")
rows = c.fetchall()
ip_checker = []
domain_checker = []
for row in rows:
    ip_checker.append(row[0])
    domain_checker.append(row[1])

# an perasw ID mesa stin vaasi:
# for i in range(0, ...)
    #select id from treats_table where ip = current_ip AND domain = domains[i]
    #if id:
        #continue
        
for i in range(0, len(ip)):
    
    current_ip = ip[i]
    if current_ip in ip_checker and domains[i] in domain_checker:
        continue
    print('PERASA NEW ', current_ip, "toses ip:", i)
    try:
        host = api.host(current_ip)
        longitude = host.get('longitude')
        latitude = host.get('latitude')
        country_name = host.get('country_name')
        #print country_name
        operating_system = host.get('os')
        city = host.get('city')
        #print city
    except Exception as e:
        longitude = "-"
        latitude = "-"
        country_name = "-"
        operating_system = "-"
        city = "-"
        #print country_name
        #print city
    #print ip[i],"\n"                  #"       ",domains[i],"                                                    ",description[i],"---------------------->",i

    c.execute("INSERT INTO threats_table (ip, domains, description, longitude, latitude, country, os, city) VALUES (?,?,?,?,?,?,?,?)",              (ip[i],domains[i],description[i], longitude, latitude, country_name, operating_system, city))
    
    conn.commit()
#--------------------------------------------- SHODAN & DATABASE END -------------------------------------------------------------------------------
    #time.sleep(1)
    
conn.close()
print('Done!')
print "domain length is:", len(domains), "\t ip length is:", len(ip), "\t description length is:", len(description)
